# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: fyp-psql-configmap
data:
  POSTGRES_DB: db
  POSTGRES_USER: user
  POSTGRES_PASSWORD: pass
  PGDATA: /var/lib/postgresql/data/k8s
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fyp-psql-pv
  labels: #Labels 
    app: psql
    ver: fyp-psql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: 192.168.0.205
    path: "/mnt/nfs_shares/fyp-database"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fyp-psql-pvc
spec:
  selector:
    matchLabels:
      app: psql
      ver: fyp-psql-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fyp-psql
  labels:
    app: psql
    ver: fyp-psql-01
spec:
  selector:
    matchLabels:
      app: psql
      ver: fyp-psql-01
  template:
    metadata:
      labels:
        app: psql
        ver: fyp-psql-01
      annotations:
        sidecar.istio.io: "false"
    spec:
      containers:
        - name: postgres
          image: postgres:12
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: fyp-psql-configmap
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdatavol
      volumes:
        - name: pgdatavol
          persistentVolumeClaim:
            claimName: fyp-psql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: fyp-psql-nodeport
spec:
  type: NodePort
  selector:
    app: psql
  ports:
    - name: psql
      port: 5432        # Cluster IP http://10.109.199.234:port (docker exposed port)
      nodePort: 30100   # (EXTERNAL-IP VirtualBox IPs) 192.168.50.11:nodePort 192.168.50.12:nodePort 192.168.50.13:nodePort
      protocol: TCP
  
